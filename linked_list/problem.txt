한 개의 노드는 분자와 분모로 이루어진 유리수를 표현하는 부분과 다음 노드를 가리키는 링크로 다음과 같이 구조체를 선언하였다. 이러한 노드를 단순 연결리스트로 구성하고 제일 앞의 노드를 head로 가리키도록 하였다. 이와 같이 구성된 연결 리스트에 대해 아래와 같이 제시된 기능을 수행하는 프로그램을 C로 작성하시오.

typedef struct element { int numerator, denominator;    }
typedef struct rat_node {   // 단순 연결리스트 노드 구조
    element ratio;      // 모두 양수 또는 음수일 수 있음
    struct rat_node *link;
} rat_node;

typedef struct rational {   // 다항식 표현의 구조체
    int length;
    rat_node *head;
} rational;
⑴ 기능 : 생성(Create), 추가(Insert), 역순(Reverse), 삭제(Delete), 출력(Display) 5가지 기능을 갖는다.

⑵ 기능 설명

∙ Create 기능: length는 0이고, head가 NULL인 rational생성

∙ Insert 기능: 한 개 노드의 입력순서는 크기순과 무관함. 2 -6 14 9 14 7 9 –1 -3 -1 27 4 -1 3 2 10 1 5 10 0 마지막 입력은 분모가 0인 경우. 단, 같은 유리수 값이 입력되면 그 값을 갖는 노드도 추가함.

∙ 크기순으로 오름차순이 되도록 단순 연결리스트를 유지하여야 함.

∙ Delete 기능: 숫자 1개 이상 입력받을 수 있음. (예: 0.7 3 2 4) 최대값 최소값 범위의 원소가 존재하면 그 노드를 삭제하고 개수를 출력함. 그렇지 않으면 없다고 출력함.

∙ Reverse 기능: 단순 연결리스트를 역순이 되도록 변경하여 새로운 rational에 저장함. 원래의 연결리스트는 그대로 유지되어야 함.

∙ Display 기능: 연결리스트를 head부터 마지막까지 분자/분모 형태로 출력하여야 함.
